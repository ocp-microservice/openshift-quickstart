
quarkus.openshift.flavor=v4

#The name of the container image extension to use (e.g. docker, jib, s2i, openshift). 
#The option will be used in case multiple extensions are present.
quarkus.container-image.builder=jib

#By default, the quarkus-openshift extension uses the output of your local build process, 
#typically a JAR file, to perform an S2I build. This is a binary build, because RHOCP does not build the application from source code. 
#Red Hat recommends the use of source S2I builds instead of binary S2I builds to deploy to a production environment
quarkus.openshift.build-strategy=docker
quarkus.openshift.add-build-timestamp=false

#During the build you may find the Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException:
#PKIX path building failed exception due to self-signed certificate. To solve this
#quarkus.kubernetes-client.trust-certs=false

#To expose a Route for the Quarkus application
quarkus.openshift.route.expose=true
#quarkus.openshift.route.target-port=https
## Route TLS configuration
#quarkus.openshift.route.tls.termination=passthrough
#quarkus.openshift.route.tls.insecure-edge-termination-policy=None

#The base/builder image is specified as
#quarkus.openshift.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-11:1.15

#Add a label in the generated resources
quarkus.openshift.labels.release-status=production
quarkus.openshift.labels.app=${quarkus.application.name}

#Add an annotation in the generated resources
#quarkus.openshift.annotations.name=quickstart

quarkus.openshift.deployment-kind=deployment

#change the default value for the generated container name
#[WARNING] [io.quarkus.kubernetes.deployment.KubernetesDeployer] An openshift deployment was requested, 
#but the container image group:shani1 is not aligned with the currently selected project:quarkus-openshift-deployment.
#it is strongly advised to align them, or else the image might not be reachable.
quarkus.container-image.group=shani1
quarkus.application.name=quickstart
quarkus.container-image.name=${quarkus.application.name:unset}
quarkus.application.version=1.0.0
quarkus.container-image.tag=${quarkus.application.version:latest}

#This value will be used for naming Kubernetes resources like: 'Deployment', 'Service' etc
quarkus.openshift.name=${quarkus.container-image.name}

#The container registry to use
#quarkus.container-image.registry=quay.io
#Represents the entire image string. If set, then group, name, registry, tags, additionalTags are ignored
quarkus.container-image.image=quay.io/shani1/quickstart:1.0.0
#he username to use to authenticate with the registry where the built image will be pushed
quarkus.container-image.username=shani1
#The password to use to authenticate with the registry where the built image will be pushed
quarkus.container-image.password=S5h**ani@_12o3
#Whether or not an image push will be performed.
quarkus.container-image.push=true
#Custom labels to add to the generated image.
#quarkus.container-image.labels.key=

